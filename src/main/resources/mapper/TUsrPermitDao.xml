<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.rbac.dao.TUsrPermitDao">

    <resultMap type="com.example.rbac.entity.TUsrPermit" id="TUsrPermitMap">
        <result property="pId" column="p_id" jdbcType="INTEGER"/>
        <result property="pUsrAcc" column="p_usr_acc" jdbcType="VARCHAR"/>
        <result property="permission" column="permission" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TUsrPermitMap">
        select
          p_id, p_usr_acc, permission
        from t_usr_permit
        where p_id = #{pId}
    </select>
    <select id="queryPermission" resultType="java.lang.Integer">
        select
            permission
        from t_usr_permit
        where p_usr_acc = #{account}
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TUsrPermitMap">
        select
          p_id, p_usr_acc, permission
        from t_usr_permit
        <where>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="pUsrAcc != null and pUsrAcc != ''">
                and p_usr_acc = #{pUsrAcc}
            </if>
            <if test="permission != null">
                and permission = #{permission}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from t_usr_permit
        <where>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="pUsrAcc != null and pUsrAcc != ''">
                and p_usr_acc = #{pUsrAcc}
            </if>
            <if test="permission != null">
                and permission = #{permission}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="pId" useGeneratedKeys="true">
        insert into t_usr_permit(p_usr_acc, permission)
        values (#{pUsrAcc}, #{permission})
    </insert>

    <insert id="insertBatch" keyProperty="pId" useGeneratedKeys="true">
        insert into t_usr_permit(p_usr_acc, permission)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.pUsrAcc}, #{entity.permission})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="pId" useGeneratedKeys="true">
        insert into t_usr_permit(p_usr_acc, permission)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pUsrAcc}, #{entity.permission})
        </foreach>
        on duplicate key update
        p_usr_acc = values(p_usr_acc),
        permission = values(permission)
    </insert>

    <insert id="addNewUsr" keyProperty="pUsrAcc" useGeneratedKeys="false">
        insert into t_usr_permit(p_usr_acc)
        values (#{account})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_usr_permit
        <set>
            <if test="pUsrAcc != null and pUsrAcc != ''">
                p_usr_acc = #{pUsrAcc},
            </if>
            <if test="permission != null">
                permission = #{permission},
            </if>
        </set>
        where p_id = #{pId}
    </update>

    <update id="updateByAcc">
        update t_usr_permit
        <set>
            <if test="account != null and account != ''">
                p_usr_acc = #{newAcc}
            </if>
        </set>
        where p_usr_acc = #{account}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_usr_permit where p_id = #{pId}
    </delete>

    <delete id="deleteByAcc">
        delete from t_usr_permit where p_usr_acc = #{account}
    </delete>

</mapper>

